name: docker-build

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main
env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: clarkchenme/flask-hello
  CONTAINER_NAME: flask-hello

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build Image
        run: |
          if [ -f Dockerfile ]; then
            docker build -t flask-hello:v1 .
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  docker-push:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: clarkchenme/flask-hello:v1
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  docker-deploy:
    name: Build
    needs: docker-push
    runs-on: ubuntu-latest
    steps:
      - name: test
        run: echo  ${{ secrets.HOST }}

      - name: test IMAGE_NAME
        run: echo $IMAGE_NAME

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_USER_PWD }}
          port: 22
          envs: IMAGE_NAME,CONTAINER_NAME
          script: |
            echo $IMAGE_NAME
            docker container stop $CONTAINER_NAME
            docker container rm $CONTAINER_NAME
            docker pull $IMAGE_NAME
            docker rmi -f $(docker images|awk '/none/{print $3}')
            docker run -p 5000:5000 -d  --name $CONTAINER_NAME $IMAGE_NAME

